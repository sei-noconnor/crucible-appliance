name: build

on:
  push:
    branches:
      - github-runner
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Packer cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/packer
        key: ${{ runner.os }}-packer-cache

    # - name: Install Dependencies
    #   run: brew install xmlstarlet coreutils

    # - name: Remove network config for VirtualBox 6 compatibility
    #   run: sed -i '' '/localhostreachable/d' packer/crucible-appliance.pkr.hcl

    - name: Homebrew Cache
      uses: tecolicom/actions-use-homebrew-tools@v1
      with:
        tools: yq
        key: ${{ runner.os }}-homebrew-cache
        cache: yes
        verbose: yes

    - name: Packer Version
      run: which packer && packer version

    - name: Write Appliance.yaml
      run: |
        APPLIANCE_YAML=$(cat << EOF
        vars:
          VSPHERE_SERVER: "${{ vars.CRUCIBLE_VSPHERE_SERVER }}"
        EOF
        )
        echo "$APPLIANCE_YAML" > appliance.yaml


    - name: Echo ENV APPLIANCE_YAML
      run: echo ${{ env.APPLIANCE_YAML }} && echo $APPLIANCE_YAML

    - name: cat appliance.yaml
      run: echo "$PWD" && ls -alh && cat appliance.yaml

    - name: Build VirtualBox OVF image
      uses: nick-fields/retry@v2
      env:
        GITHUB_PULL_REQUEST: ${{ github.event.number }}
      with:
        timeout_minutes: 60
        max_attempts: 5
        command: make build

    # - name: Get build_name from OVF file
    #   run: echo "build_name=$(sh -c "find . -name '*.ovf' | xargs basename -s '.ovf'")" >> $GITHUB_ENV
    #   working-directory: ./output-virtualbox

    # - name: Improve OVF VMware compatibility
    #   run: |
    #     xml ed --inplace \
    #            -N ns='http://schemas.dmtf.org/ovf/envelope/1' \
    #            -N vssd="http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData" \
    #            -u "//ns:System/vssd:VirtualSystemType" \
    #            -v "vmx-13" \
    #            ${{ env.build_name }}.ovf
    #     xml ed --inplace \
    #            -N ns='http://schemas.dmtf.org/ovf/envelope/1' \
    #            -N rasd='http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData' \
    #            -d "//ns:Item[rasd:ResourceSubType[contains(text(), 'PIIX4')]]" \
    #            ${{ env.build_name }}.ovf
    #     xml ed --inplace \
    #            -N ns='http://schemas.dmtf.org/ovf/envelope/1' \
    #            -d "//ns:StorageController[@type='PIIX4']" \
    #            ${{ env.build_name }}.ovf
    #   working-directory: ./output-virtualbox

    # - name: Create OVA manifest
    #   run: openssl sha256 *.ovf *.vmdk > ${{ env.build_name }}.mf
    #   working-directory: ./output-virtualbox

    # - name: Package OVA image
    #   run: tar -cvf ../${{ env.build_name }}.ova --format=ustar ${{ env.build_name }}{.ovf,-disk001.vmdk,.mf}
    #   working-directory: ./output-virtualbox

    # - name: Upload OVA to Azure Storage
    #   run: |
    #     az cloud set --name AzureUSGovernment
    #     az storage blob upload --file ${{ env.build_name }}.ova \
    #                            --container-name ova \
    #                            --name appliance/${{ env.build_name }}.ova \
    #                            --connection-string "${{ secrets.AZ_STORAGE_CS }}" \
    #                            --no-progress
