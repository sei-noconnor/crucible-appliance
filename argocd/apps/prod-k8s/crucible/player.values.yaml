player-api:
  kind: "StatefulSet"
  # Docker image release version
  image:
    repository: cmusei/player-api
    tag: "3.2.3"
    pullPolicy: IfNotPresent
  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"

    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: /player/(hubs|swagger|api)
            pathType: Prefix

    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  # If this deployment needs to trust non-public certificates,
  # create a configMap with the needed certifcates and specify
  # the configMap name here
  certificateMap: "appliance-root-ca"

  # storage - either an existing pvc, the size for a new pvc, or emptyDir
  # this is used to store uploaded files
  storage:
    existing: "player-files-nfs-pvc"
    size: ""
    mode: ""
    class: ""

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/crucible/blob/master/player.api/S3.Player.Api/appsettings.json
  env:
    # Proxy Settings - Set these in your values file if you are behind a proxy.
    # http_proxy: proxy.example.com:9000
    # https_proxy: proxy.example.com:9000
    # HTTP_PROXY: proxy.example.com:9000
    # HTTPS_PROXY: proxy.example.com:9000
    # NO_PROXY: .local
    # no_proxy: .local

    ## If hosting in virtual directory, specify path base
    PathBase: "/player"
    Logging__LogLevel__Default: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__LogLevel__System: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__LogLevel__Microsoft: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__Default: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__System: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__Microsoft: "<path:fortress-prod/data/shared#crucible-log-level>"
    # CORS policy settings.
    # The first entry should be the URL to player
    # The second entry should be the URL to VM App
    # Subsequent entries can be other integrated apps, such as OSTicket
    CorsPolicy__Origins__0: "https://<path:fortress-prod/data/shared#domain>"
    CorsPolicy__Origins__1: "http://localhost:4301"
    CorsPolicy__Origins__2: "http://localhost:4303"
    CorsPolicy__AllowAnyMethod: true
    CorsPolicy__AllowAnyHeader: true
    # CorsPolicy__SupportsCredentials: false
    # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: "<path:fortress-prod/data/player#player-api-db-connection-string>"
    
    # OAuth2 Identity Client for Application
    Authorization__Authority: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authority-url>
    Authorization__AuthorizationUrl: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authorization-url>
    Authorization__TokenUrl: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-token-url>
    Authorization__AuthorizationScope: "player-api"
    Authorization__ClientId: <path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_player-api
    Authorization__ClientName: "Player API"

    # Basic seed data to jumpstart deployement
    # TODO - Document Seed Data
    SeedData__SystemAdminIds__0: <path:fortress-prod/data/shared#oauth-admin-guid>
    SeedData__SystemAdminIds__1: <path:fortress-prod/data/shared#oauth-crucible-admin-guid>

player-ui:
  # Docker image release version
  image:
    repository: cmusei/player-ui
    tag: "3.2.2"
    pullPolicy: IfNotPresent

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: "/player(/|$)(.*)"
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  extraVolumes: |
    - name: fortress-branding-vol
      configMap:
        name: branding-ico
    - name: fortress-branding-svg-vol
      configMap:
        name: branding-svg

  extraVolumeMounts: |
    - name: fortress-branding-vol
      mountPath: /usr/share/nginx/html/assets/img/player.ico
      subPath: player.ico
    - name: fortress-branding-vol
      mountPath: /usr/share/nginx/html/assets/img/crucible-logo-light.png
      subPath: crucible-logo-light.png
    - name: fortress-branding-vol
      mountPath: /usr/share/nginx/html/assets/img/crucible-logo-dark.png
      subPath: crucible-logo-dark.png
    - name: fortress-branding-svg-vol
      mountPath: /usr/share/nginx/html/assets/svg-icons/ic_crucible_player.svg
      subPath: ic_crucible_player.svg

  env:
    ## basehref is path to the app
    APP_BASEHREF: "/player"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client and
  # some basic configuration
  settings: |-
    {
      "ApiUrl": "https://<path:fortress-prod/data/shared#domain>/player",
      "OIDCSettings": {
        "authority": "https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authority-url>",
        "client_id": "<path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_player-ui",
        "redirect_uri": "https://<path:fortress-prod/data/shared#domain>/player/auth-callback",
        "post_logout_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/player",
        "response_type": "code",
        "scope": "openid profile player-api",
        "automaticSilentRenew": true,
        "silent_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/player/auth-callback-silent.html"
      },
      "NotificationsSettings": {
        "url": "https://<path:fortress-prod/data/shared#domain>/player/hubs",
        "number_to_display": 4
      },
      "AppTitle": "Player",
      "AppTopBarText": "Player",
      "AppTopBarHexColor": "#5F8DB5",
      "AppTopBarHexTextColor": "#FFFFFF",
      "UseLocalAuthStorage": true
    }

vm-api:
  # Docker image release version
  image:
    repository: cmusei/vm-api
    pullPolicy: IfNotPresent
    tag: "3.5.3"

  # iso - an NFS volume mount for ISO uploads
  iso:
    enabled: true
    size: ""
    server: "nfs-svc.cwd.cert.org"
    path: "/data/iso/player-player-api/isos"

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>

      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 8G

    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: /vm/(notifications|hubs|api|swagger)
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  # VM-API deployment adds a second ingress
  # - This ingress is used as a proxy for getting a websocket
  #   console connection to vCenter hosts.
  # - TLS and Host URLs need configured, but the snippet should be left alone
  # NOTES:
  # - This is only used if RewriteHost__RewriteHost below is true, otherwise
  #   connections will go directly from the UI to the vCenter hosts themselves
  # - The host value here corresponds to RewriteHost__RewriteHostUrl below
  consoleIngress:
    deployConsoleProxy: true
    name: player-connect
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        location ~ /connect/ticket/(.+) {
          #resolver 127.0.0.11 ipv6=off valid=60;
          proxy_pass https://$arg_vmhost/ticket/$1;
          proxy_http_version 1.1;
          proxy_request_buffering off;
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_ssl_session_reuse on;
        }

        location ~ /connect/api2/json/nodes/(.+)/qemu/(.+)/vncwebsocket.* {
          #resolver 127.0.0.11 ipv6=off valid=60s;
          proxy_pass https://$arg_vmhost/api2/json/nodes/$1/qemu/$2/vncwebsocket?port=$arg_port&vncticket=$arg_vncticket;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_request_buffering off;
          proxy_buffering off;
          proxy_ssl_session_reuse on;
        }

    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: "/console/ticket(/|$)(.*)"
            pathType: Prefix

    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  # If this deployment needs to trust non-public certificates,
  # create a configMap with the needed certifcates and specify
  # the configMap name here

  certificateMap: "appliance-root-ca"

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/crucible/blob/master/vm.api/S3.VM.Api/appsettings.json
  env:
    # Proxy Settings
    # http_proxy: proxy.example.com:9000
    # https_proxy: proxy.example.com:9000
    # HTTP_PROXY: proxy.example.com:9000
    # HTTPS_PROXY: proxy.example.com:9000
    # NO_PROXY: .local
    # no_proxy: .local

    ## If hosting in virtual directory, specify path base
    PathBase: "/vm"

    # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: "<path:fortress-prod/data/player#player-vm-api-db-connection-string>"

    # CORS policy settings.
    # The first entry should be the URL to VM App
    # The second entry should be the URL to Console App
    CorsPolicy__Origins__0: "https://<path:fortress-prod/data/shared#domain>"
    CorsPolicy__Origins__1: "http://localhost:4303"
    # CorsPolicy__AllowAnyOrigin: true
    CorsPolicy__AllowAnyMethod: true
    CorsPolicy__AllowAnyHeader: true
    # CorsPolicy__SupportsCredentials: false
    Logging__LogLevel__Default: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__LogLevel__System: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__LogLevel__Microsoft: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__Default: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__System: "<path:fortress-prod/data/shared#crucible-log-level>"
    Logging__Console__LogLevel__Microsoft: "<path:fortress-prod/data/shared#crucible-log-level>"

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authority-url>
    Authorization__AuthorizationUrl: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authorization-url>
    Authorization__TokenUrl: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-token-url>
    Authorization__AuthorizationScope: "vm-api player-api"
    Authorization__ClientId: <path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_vm-api
    Authorization__ClientName: "VM API"

    # OAuth2 Identity Client /w Password
    IdentityClient__TokenUrl: https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-token-url>
    IdentityClient__ClientId: <path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_player-admin
    IdentityClient__Scope: "player-api vm-api"
    IdentityClient__UserName: "<path:fortress-prod/data/shared#crucible-admin-user>"
    IdentityClient__Password: "<path:fortress-prod/data/shared#crucible-admin-pass>"

    # Crucible Player URL
    ClientSettings__urls__playerApi: "https://<path:fortress-prod/data/shared#domain>/player/api"

    # VCenter settings
    #
    # A privileged vCenter used is required to read and write files
    #
    # A datastore needs to be created for Player to store files.  This is
    # typically an NFS share in the format:  <DATASTORE>/player/
    #
    # - DsName denotes the DataStore name
    # - BaseFolder is the folder inside the DataStore to use
    Vsphere__Host: "<path:fortress-prod/data/vsphere#vsphere-server>"
    Vsphere__Username: "<path:fortress-prod/data/vsphere#vsphere-user>"
    Vsphere__Password: "<path:fortress-prod/data/vsphere#vsphere-pass>"
    Vsphere__DsName: "iso"
    Vsphere__BaseFolder: "/player-player-api/isos"

    #Proxmox settings
    Proxmox__Enabled: true
    Proxmox__Host: g14.cwd.cert.org
    Proxmox__Port: 443
    Proxmox__Token: <path:fortress-prod/data/player#proxmox-token>

    # Rewrite Host settings
    # See "consoleIngress" section above for usage
    RewriteHost__RewriteHost: true
    RewriteHost__RewriteHostUrl: "<path:fortress-prod/data/shared#domain>/connect"
    RewriteHost__RewriteHostQueryParam: "vmhost"
    ConsoleUrls__DefaultUrl: "https://<path:fortress-prod/data/shared#domain>/console"

    VmUsageLogging__Enabled: true
    VmUsageLogging__PostgreSQL: "<path:fortress-prod/data/player#player-vm-api-logging-connection-string>"

vm-ui:
  # Docker image release version
  image:
    repository: cmusei/vm-ui
    pullPolicy: IfNotPresent
    tag: "3.3.4"

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: "/vm(/|$)(.*)"
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  env:
    ## basehref is path to the app
    APP_BASEHREF: "vm"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client
  settings: |-
    {
       "ApiUrl": "https://<path:fortress-prod/data/shared#domain>/vm/api",
       "DeployApiUrl": "",
       "ApiPlayerUrl": "https://<path:fortress-prod/data/shared#domain>/player/api",
       "WelderUrl": "",
       "UserFollowUrl": "https://<path:fortress-prod/data/shared#domain>/console/user/{userId}/view/{viewId}/console",
       "OIDCSettings": {
           "authority": "https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authority-url>",
           "client_id": "<path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_vm-ui",
           "redirect_uri": "https://<path:fortress-prod/data/shared#domain>/vm/auth-callback",
           "post_logout_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/vm",
           "response_type": "code",
           "scope": "openid profile player-api vm-api",
           "automaticSilentRenew": true,
           "silent_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/vm/auth-callback-silent"
       },
       "UseLocalAuthStorage": true
     }

console-ui:
  # Docker image release version
  image:
    repository: cmusei/vm-console-ui
    pullPolicy: IfNotPresent
    tag: "3.2"

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: <path:fortress-prod/data/shared#ingress-class>
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: <path:fortress-prod/data/shared#domain>
        paths:
          - path: "/console(/|$)(.*)"
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
          - <path:fortress-prod/data/shared#domain>

  env:
    ## basehref is path to the app
    APP_BASEHREF: "/console"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client and some basic settings
  settings: |-
    {
      "ConsoleApiUrl": "https://<path:fortress-prod/data/shared#domain>/vm/api",
      "OIDCSettings": {
        "authority": "https://<path:fortress-prod/data/shared#domain>/<path:fortress-prod/data/shared#oauth-provider>/<path:fortress-prod/data/shared#oauth-authority-url>",
        "client_id": "<path:fortress-prod/data/shared#oauth-env>_<path:fortress-prod/data/shared#oauth-gid>_vm-console-ui",
        "redirect_uri": "https://<path:fortress-prod/data/shared#domain>/console/auth-callback",
        "post_logout_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/console",
        "response_type": "code",
        "scope": "openid profile player-api vm-api",
        "automaticSilentRenew": true,
        "silent_redirect_uri": "https://<path:fortress-prod/data/shared#domain>/console/auth-callback-silent.html"
      },
      "UseLocalAuthStorage": true,
      "VmResolutionOptions": [
        { "width": 2560, "height": 1600 },
        { "width": 1920, "height": 1440 },
        { "width": 1920, "height": 1200 },
        { "width": 1600, "height": 1200 },
        { "width": 1400, "height": 1050 },
        { "width": 1280, "height": 1024 },
        { "width": 1440, "height": 900 },
        { "width": 1280, "height": 960 },
        { "width": 1366, "height": 768 },
        { "width": 1280, "height": 800 },
        { "width": 1280, "height": 720 },
        { "width": 1024, "height": 768 },
        { "width": 800, "height": 600 }
      ]
    }
